# -*- coding: utf-8 -*-
"""NIST_Metrics.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O54WOlRS_-H7qBlDWVGJjh2BpMX6tP5A
"""

# clone the git
# !git clone "https://github.com/stevenang/randomness_testsuite.git"
import os
import pandas as pd
from randomness_testsuite.Tools import Tools
from randomness_testsuite.FrequencyTest import FrequencyTest as ft
from randomness_testsuite.RunTest import RunTest as rt
from randomness_testsuite.Matrix import Matrix as mt
from randomness_testsuite.Spectral import SpectralTest as st
from randomness_testsuite.TemplateMatching import TemplateMatching as tm
from randomness_testsuite.Universal import Universal as ut
from randomness_testsuite.Complexity import ComplexityTest as ct
from randomness_testsuite.Serial import Serial as serial
from randomness_testsuite.ApproximateEntropy import ApproximateEntropy as aet
from randomness_testsuite.CumulativeSum import CumulativeSums as cst
from randomness_testsuite.RandomExcursions import RandomExcursions as ret

path = "datasets/"
filename = "email_list.csv"
email_list = pd.read_csv(path + filename)
email_list['password'] = email_list['password'].astype(str)
email_list['binary_password'] = email_list['password'].apply(Tools.string_to_binary)

test_type = [
    'freq_test_monobit',
    'freq_test_block',
    'run_test',
    'longest_one_block_test',
    'binary_matrix_rank_text',
    'sepctral_test',
    'non_overlapping_test',
    'overlapping_patterns',
    'statistical_test',
    'linear_complexity_test',
    'serial_test',
    'approximate_entropy_test',
    'cumulative_sums_test',
    'cumulative_sums_test',
    'random_excursions_test',
    'variant_test'
]

test_function = {
    0: {'func': ft.monobit_test, 'name': 'freq_test_monobit'},
    1: {'func': ft.block_frequency, 'name': 'freq_test_block'},
    2: {'func': rt.run_test, 'name': 'run_test'},
    3: {'func': rt.longest_one_block_test, 'name': 'longest_one_block_test'},
    4: {'func': mt.binary_matrix_rank_text, 'name': 'binary_matrix_rank_text'},
    5: {'func': st.sepctral_test, 'name': 'sepctral_test'},
    6: {'func': tm.non_overlapping_test, 'name': 'non_overlapping_test'},
    7: {'func': ft.monobit_test, 'name': 'overlapping_patterns'},
    8: {'func': ut.statistical_test, 'name': 'statistical_test'},
    9: {'func': ct.linear_complexity_test, 'name': 'linear_complexity_test'},
    10: {'func': serial.serial_test, 'name': 'serial_test'},
    11: {'func': aet.approximate_entropy_test, 'name': 'approximate_entropy_test'},
    12: {'func': cst.cumulative_sums_test, 'name': 'cumulative_sums_test'},
    13: {'func': cst.cumulative_sums_test, 'name': 'cumulative_sums_test'},
    14: {'func': ret.random_excursions_test, 'name': 'random_excursions_test'},
    15: {'func': ret.variant_test, 'name': 'variant_test'}
}

for ind, test in test_function.items():
    print(f"testing {test['name']}")
    email_list[test['name']] = email_list['binary_password'].apply(test['func'])

email_list.to_csv(path + "NIST_metrics_" + filename)
